GIT COMMANDS

git init --> it start tracking the folder (it makes .git folder to maintain record folder)

git add . --> add all files in folder to staging area
git add hello.txt abc.txt --> stage only these file 

git commit -m "message"  --> commit this file (it become latest version)

git status --> show  current status of folder 
git log --> every change show 

git config --global user.name "give user name"
git config --global user.email "give email"

git push -u origin main --> push to github for 1st time
git push --> push to github afterward

git clone link_of_file --> used to clone an existing github project

gitignore --> used to ignore some files to be pushed in github 
1)  * .a  --> ignore all .a file 
2)  * .[oa] --> ignore all .a and .o file 
3) ! test.a --> do not ignore test.a 
4)  /todo --> ignore this current directory
5) test/ --> ignore all file inside test directory 


git rm file_name--> used to delete a file from directory 
ex--> git rm hello.txt 
      git commit -m "deleted hello.txt"


git rm -f file_name --> a modified file not yet in staging area   
                         is forcefully removed


git rm --cached <file_name> --> a file to be removed from staging 
                                area to modified state
            

git commit --amend  --> when we want to change file in previous commit only 
                        and do not increase our no. of commit we do this 

git commit --amend steps -->
step 1--> write git commit --amend
step 2--> an editor opened 
step 3-->press i now we can edit and edit the message 
step 4--> press esc
step 5 --> press :wq 
step 6--> now we are outside the editor 
 

git reset--> a file in staging area(green) is removed to modified area(red) by using this command 
git reset HEAD file_name 


git checkout file_name -->when we modified our file but we don't want these 
                        modification we use this command 
                        similar to undo till last commit 

ex--> git checkout -- file_name 

git stash --> modiied goes to stack 
git stash pop --> modified comes to file 
git stash clear --> empty stack 


git restore --> move file to last staged area(green) or if no staged area is present 
                move it to last commited area 

               